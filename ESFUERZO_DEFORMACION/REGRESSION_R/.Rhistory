error_medio_3 = mean(summary(regresion3)$residuals)
error_medio_4 = mean(summary(regresion4)$residuals)
error_medio_5 = mean(summary(regresion5)$residuals)
beginning_mods_results = data.frame(
"Modulo de Young" =
c("Specimen1" = young1,
"Specimen2" = young2,
"Specimen3" = young3,
"Specimen4" = young4,
"Specimen5" = young5
),
"Intervalo de 95% confinza" =
c("Specimen1" = intervalo1,
"Specimen2" = intervalo2,
"Specimen3" = intervalo3,
"Specimen4" = intervalo4,
"Specimen5" = intervalo5
),
"Error Promedio del Modelo" =
c("Specimen1" = error_medio_1,
"Specimen2" = error_medio_2,
"Specimen3" = error_medio_3,
"Specimen4" = error_medio_4,
"Specimen5" = error_medio_5
)
)
#Para utilizar kable
library(knitr)
kable(beginning_mods_results, align = c("c", "r"))
young1=regresion1$coefficients[2]
young2=regresion2$coefficients[2]
young3=regresion3$coefficients[2]
young4=regresion4$coefficients[2]
young5=regresion5$coefficients[2]
intervalo1=paste('[',as.character(as.numeric(format(confint(regresion1)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion1)[2,][2],nsmall=4))), ']', sep="")
intervalo2=paste('[',as.character(as.numeric(format(confint(regresion2)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion2)[2,][2],nsmall=4))), ']', sep="")
intervalo3=paste('[',as.character(as.numeric(format(confint(regresion3)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion3)[2,][2],nsmall=4))), ']', sep="")
intervalo4=paste('[',as.character(as.numeric(format(confint(regresion4)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion4)[2,][2],nsmall=4))), ']', sep="")
intervalo5=paste('[',as.character(as.numeric(format(confint(regresion5)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion5)[2,][2],nsmall=4))), ']', sep="")
beginning_mods_results = data.frame(
"Modulo de Young" =
c("Specimen1" = young1,
"Specimen2" = young2,
"Specimen3" = young3,
"Specimen4" = young4,
"Specimen5" = young5
),
"Intervalo de 95% confinza" =
c("Specimen1" = intervalo1,
"Specimen2" = intervalo2,
"Specimen3" = intervalo3,
"Specimen4" = intervalo4,
"Specimen5" = intervalo5
)
)
#Para utilizar kable
library(knitr)
kable(beginning_mods_results, align = c("c", "r"))
young1=regresion1$coefficients[2]
young2=regresion2$coefficients[2]
young3=regresion3$coefficients[2]
young4=regresion4$coefficients[2]
young5=regresion5$coefficients[2]
intervalo1=paste('[',as.character(as.numeric(format(confint(regresion1)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion1)[2,][2],nsmall=4))), ']', sep="")
intervalo2=paste('[',as.character(as.numeric(format(confint(regresion2)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion2)[2,][2],nsmall=4))), ']', sep="")
intervalo3=paste('[',as.character(as.numeric(format(confint(regresion3)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion3)[2,][2],nsmall=4))), ']', sep="")
intervalo4=paste('[',as.character(as.numeric(format(confint(regresion4)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion4)[2,][2],nsmall=4))), ']', sep="")
intervalo5=paste('[',as.character(as.numeric(format(confint(regresion5)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion5)[2,][2],nsmall=4))), ']', sep="")
beginning_mods_results = data.frame(
"Modulo_de_Young" =
c("Specimen1" = young1,
"Specimen2" = young2,
"Specimen3" = young3,
"Specimen4" = young4,
"Specimen5" = young5
),
"Intervalo_95_confinza" =
c("Specimen1" = intervalo1,
"Specimen2" = intervalo2,
"Specimen3" = intervalo3,
"Specimen4" = intervalo4,
"Specimen5" = intervalo5
)
)
#Para utilizar kable
library(knitr)
kable(beginning_mods_results, align = c("c", "r"))
young1=regresion1$coefficients[2]
young2=regresion2$coefficients[2]
young3=regresion3$coefficients[2]
young4=regresion4$coefficients[2]
young5=regresion5$coefficients[2]
intervalo1=paste('[',as.character(as.numeric(format(confint(regresion1)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion1)[2,][2],nsmall=4))), ']', sep="")
intervalo2=paste('[',as.character(as.numeric(format(confint(regresion2)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion2)[2,][2],nsmall=4))), ']', sep="")
intervalo3=paste('[',as.character(as.numeric(format(confint(regresion3)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion3)[2,][2],nsmall=4))), ']', sep="")
intervalo4=paste('[',as.character(as.numeric(format(confint(regresion4)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion4)[2,][2],nsmall=4))), ']', sep="")
intervalo5=paste('[',as.character(as.numeric(format(confint(regresion5)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion5)[2,][2],nsmall=4))), ']', sep="")
beginning_mods_results = data.frame(
"Modulo_de_Young [MPa / mm]" =
c("Specimen1" = young1,
"Specimen2" = young2,
"Specimen3" = young3,
"Specimen4" = young4,
"Specimen5" = young5
),
"Intervalo_95_confinza" =
c("Specimen1" = intervalo1,
"Specimen2" = intervalo2,
"Specimen3" = intervalo3,
"Specimen4" = intervalo4,
"Specimen5" = intervalo5
)
)
#Para utilizar kable
library(knitr)
kable(beginning_mods_results, align = c("c", "r"))
young1=regresion1$coefficients[2]
young2=regresion2$coefficients[2]
young3=regresion3$coefficients[2]
young4=regresion4$coefficients[2]
young5=regresion5$coefficients[2]
intervalo1=paste('[',as.character(as.numeric(format(confint(regresion1)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion1)[2,][2],nsmall=4))), ']', sep="")
intervalo2=paste('[',as.character(as.numeric(format(confint(regresion2)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion2)[2,][2],nsmall=4))), ']', sep="")
intervalo3=paste('[',as.character(as.numeric(format(confint(regresion3)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion3)[2,][2],nsmall=4))), ']', sep="")
intervalo4=paste('[',as.character(as.numeric(format(confint(regresion4)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion4)[2,][2],nsmall=4))), ']', sep="")
intervalo5=paste('[',as.character(as.numeric(format(confint(regresion5)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion5)[2,][2],nsmall=4))), ']', sep="")
beginning_mods_results = data.frame(
"Modulo_de_Young_[MPa//mm]" =
c("Specimen1" = young1,
"Specimen2" = young2,
"Specimen3" = young3,
"Specimen4" = young4,
"Specimen5" = young5
),
"Intervalo_95_confinza" =
c("Specimen1" = intervalo1,
"Specimen2" = intervalo2,
"Specimen3" = intervalo3,
"Specimen4" = intervalo4,
"Specimen5" = intervalo5
)
)
#Para utilizar kable
library(knitr)
kable(beginning_mods_results, align = c("c", "r"))
young1=regresion1$coefficients[2]
young2=regresion2$coefficients[2]
young3=regresion3$coefficients[2]
young4=regresion4$coefficients[2]
young5=regresion5$coefficients[2]
intervalo1=paste('[',as.character(as.numeric(format(confint(regresion1)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion1)[2,][2],nsmall=4))), ']', sep="")
intervalo2=paste('[',as.character(as.numeric(format(confint(regresion2)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion2)[2,][2],nsmall=4))), ']', sep="")
intervalo3=paste('[',as.character(as.numeric(format(confint(regresion3)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion3)[2,][2],nsmall=4))), ']', sep="")
intervalo4=paste('[',as.character(as.numeric(format(confint(regresion4)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion4)[2,][2],nsmall=4))), ']', sep="")
intervalo5=paste('[',as.character(as.numeric(format(confint(regresion5)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion5)[2,][2],nsmall=4))), ']', sep="")
beginning_mods_results = data.frame(
"Modulo_de_Young_[MPa.mm]" =
c("Specimen1" = young1,
"Specimen2" = young2,
"Specimen3" = young3,
"Specimen4" = young4,
"Specimen5" = young5
),
"Intervalo_95_confinza" =
c("Specimen1" = intervalo1,
"Specimen2" = intervalo2,
"Specimen3" = intervalo3,
"Specimen4" = intervalo4,
"Specimen5" = intervalo5
)
)
#Para utilizar kable
library(knitr)
kable(beginning_mods_results, align = c("c", "r"))
summary(regresion1)
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('s1.csv')
Specimen2 <- read.csv('s2.csv')
Specimen3 <- read.csv('s3.csv')
Specimen4 = read.csv('s4.csv')
Specimen5 = read.csv('s5.csv')
#PARA OBTENER UN RESUMEN RÁPIDO DE LAS CARACTERISTICAS DEL DATASET
summary(Specimen1)
head(Specimen1)
str(Specimen1)
#debido a que R es diferente de excel, lo más facil y además en este caso no se afecta la grŕafica al eliminar estos vaores que en el momento d emedición perdieron su '.' decimal. LOS DATOS DEBEN TENER PUNTOS'.' no comas ',', ya que el archivo CSV utiliza ',' para separar cada campo del dataframe
Specimen1=Specimen1[Specimen1$esfuerzo_de_traccion<1000,]
Specimen1=Specimen1[Specimen1$desplazamiento_deformacion_uno<5,]
Specimen2=Specimen2[Specimen2$esfuerzo_de_traccion<1000,]
Specimen2=Specimen2[Specimen2$desplazamiento_deformacion_uno<5,]
Specimen3=Specimen3[Specimen3$esfuerzo_de_traccion<1000,]
Specimen3=Specimen3[Specimen3$desplazamiento_deformacion_uno<5,]
Specimen4=Specimen4[Specimen4$esfuerzo_de_traccion<1000,]
Specimen4=Specimen4[Specimen4$desplazamiento_deformacion_uno<5,]
Specimen5=Specimen5[Specimen5$esfuerzo_de_traccion<800,]
Specimen5=Specimen5[Specimen5$desplazamiento_deformacion_uno<5,]
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(Specimen1$desplazamiento_deformacion_uno, Specimen1$esfuerzo_de_traccion,  main="Esfuerzo traccion vs Desplazamiento deformacion", xlab= " Desplazamiento Deformación 1 [mm]", ylab= "Esfuerzo de tracción [MPa]", type="l", ylim=c(0,25))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
lines(Specimen2$desplazamiento_deformacion_uno, Specimen2$esfuerzo_de_traccion, lty="dashed")
lines(Specimen3$desplazamiento_deformacion_uno, Specimen3$esfuerzo_de_traccion, lty="dotted") # lty=line type
lines(Specimen4$desplazamiento_deformacion_uno, Specimen4$esfuerzo_de_traccion, lty="dotdash")
lines(Specimen5$desplazamiento_deformacion_uno, Specimen5$esfuerzo_de_traccion, lty="twodash")
#AGREGAMOS TEXTO ALEATORIO SOBRE UNAS COORDENADAS X,Y
text(x=2, y=15,label="s2")
text(x=3.24, y=12,label="s3")
text(x=3.85, y=13,label="s4")
text(x=4.9, y=20.1,label="s5")
text(x=4.7, y=14,label="s1")
#AGREGAMOS LINEAS VERTICALES PARA SEÑALAR LA REGION ELASTICA
n1=length(Specimen1$desplazamiento_deformacion_uno)
low_band=n1*0.05
high_band=n1*0.25
abline(v=Specimen1$desplazamiento_deformacion_uno[low_band], col="blue")
abline(v=Specimen1$desplazamiento_deformacion_uno[high_band], col="blue")
abline(v=Specimen2$desplazamiento_deformacion_uno[low_band], col="red")
abline(v=Specimen2$desplazamiento_deformacion_uno[high_band], col="red")
abline(v=Specimen2$desplazamiento_deformacion_uno[low_band], col="red")
abline(v=Specimen2$desplazamiento_deformacion_uno[high_band], col="red")
abline(v=Specimen2$desplazamiento_deformacion_uno[low_band], col="yellow")
abline(v=Specimen2$desplazamiento_deformacion_uno[high_band], col="yellow")
abline(v=Specimen2$desplazamiento_deformacion_uno[low_band], col="green")
abline(v=Specimen2$desplazamiento_deformacion_uno[high_band], col="green")
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('s1.csv')
Specimen2 <- read.csv('s2.csv')
Specimen3 <- read.csv('s3.csv')
Specimen4 = read.csv('s4.csv')
Specimen5 = read.csv('s5.csv')
#debido a que R es diferente de excel, lo más facil y además en este caso no se afecta la grŕafica al eliminar estos vaores que en el momento d emedición perdieron su '.' decimal. LOS DATOS DEBEN TENER PUNTOS'.' no comas ',', ya que el archivo CSV utiliza ',' para separar cada campo del dataframe
Specimen1=Specimen1[Specimen1$carga<10000,]
Specimen1=Specimen1[Specimen1$extension_de_traccion<20,]
Specimen2=Specimen2[Specimen2$carga<10000,]
Specimen2=Specimen2[Specimen2$extension_de_traccion<20,]
Specimen3=Specimen3[Specimen3$carga<10000,]
Specimen3=Specimen3[Specimen3$extension_de_traccion<20,]
Specimen4=Specimen4[Specimen4$carga<10000,]
Specimen4=Specimen4[Specimen4$extension_de_traccion<20,]
Specimen4=tail(Specimen4, -2)
Specimen5=Specimen5[Specimen5$carga<10000,]
Specimen5=Specimen5[Specimen5$extension_de_traccion<20,]
#EXTRAEMOS LAS COLUMNAS Y FILAS QUE UTILIZAREMOS PARA HACER LA REGRESIÓN: Recortamos filas porque solo queremos la region elastica, recortamos columnas porque queremos ajustar la recta con un porcentaje especifico de los Datos según la norma ISO 527
deformacion_specimen1=Specimen1$desplazamiento_deformacion_uno
n1=length(Specimen1$desplazamiento_deformacion_uno)
low_band=n1*0.05
high_band=n1*0.25
deformacion_specimen1=deformacion_specimen1[low_band:high_band]
esfuerzo_specimen1=Specimen1$esfuerzo_de_traccion
esfuerzo_specimen1=esfuerzo_specimen1[low_band:high_band]
deformacion_specimen2=Specimen2$desplazamiento_deformacion_uno
deformacion_specimen2=deformacion_specimen2[low_band:high_band]
esfuerzo_specimen2=Specimen2$esfuerzo_de_traccion
esfuerzo_specimen2=esfuerzo_specimen2[low_band:high_band]
deformacion_specimen3=Specimen3$desplazamiento_deformacion_uno
deformacion_specimen3=deformacion_specimen3[low_band:high_band]
esfuerzo_specimen3=Specimen3$esfuerzo_de_traccion
esfuerzo_specimen3=esfuerzo_specimen3[low_band:high_band]
deformacion_specimen4=Specimen4$desplazamiento_deformacion_uno
deformacion_specimen4=deformacion_specimen4[low_band:high_band]
esfuerzo_specimen4=Specimen4$esfuerzo_de_traccion
esfuerzo_specimen4=esfuerzo_specimen4[low_band:high_band]
deformacion_specimen5=Specimen5$desplazamiento_deformacion_uno
deformacion_specimen5=deformacion_specimen5[low_band:high_band]
esfuerzo_specimen5=Specimen5$esfuerzo_de_traccion
esfuerzo_specimen5=esfuerzo_specimen5[low_band:high_band]
par(mfrow = c(2,3))
plot( deformacion_specimen1,  esfuerzo_specimen1)
plot( deformacion_specimen2,  esfuerzo_specimen2)
plot( deformacion_specimen3,  esfuerzo_specimen3)
plot( deformacion_specimen4,  esfuerzo_specimen4)
plot( deformacion_specimen5,  esfuerzo_specimen5)
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('s1.csv')
Specimen2 <- read.csv('s2.csv')
Specimen3 <- read.csv('s3.csv')
Specimen4 = read.csv('s4.csv')
Specimen5 = read.csv('s5.csv')
par(mfrow = c(2,3))
plot( deformacion_specimen1,  esfuerzo_specimen1)
#CARGAMOS LS DATOS '.csv'
Specimen1 = read.csv('s1.csv')
#CARGAMOS LS DATOS '.csv'
Specimen1 = read.csv('s1.csv')
Specimen2 <- read.csv('s2.csv')
Specimen3 <- read.csv('s3.csv')
Specimen4 = read.csv('s4.csv')
Specimen5 = read.csv('s5.csv')
Specimen1=Specimen1[Specimen1$carga<10000,]
Specimen1=Specimen1[Specimen1$extension_de_traccion<20,]
Specimen2=Specimen2[Specimen2$carga<10000,]
Specimen2=Specimen2[Specimen2$extension_de_traccion<20,]
Specimen3=Specimen3[Specimen3$carga<10000,]
Specimen3=Specimen3[Specimen3$extension_de_traccion<20,]
Specimen4=Specimen4[Specimen4$carga<10000,]
Specimen4=Specimen4[Specimen4$extension_de_traccion<20,]
Specimen4=tail(Specimen4, -2)
Specimen5=Specimen5[Specimen5$carga<10000,]
Specimen5=Specimen5[Specimen5$extension_de_traccion<20,]
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(Specimen1$extension_de_traccion, Specimen1$carga,  main="Carga vs Extensión de tracción", xlab= "Extensión de Tracción [mm]", ylab= "Carga [N]", type="l", xlim=c(0,20), ylim=c(0,1000))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
lines(Specimen2$extension_de_traccion, Specimen2$carga, lty="dashed")
lines(Specimen3$extension_de_traccion, Specimen3$carga, lty="dotted") # lty=line type
lines(Specimen4$extension_de_traccion, Specimen4$carga, lty="dotdash")
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(Specimen1$extension_de_traccion, Specimen1$carga,  main="Carga vs Extensión de tracción", xlab= "Extensión de Tracción [mm]", ylab= "Carga [N]", type="l", xlim=c(0,20), ylim=c(0,1000))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
+lines(Specimen2$extension_de_traccion, Specimen2$carga, lty="dashed")
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(Specimen1$extension_de_traccion, Specimen1$carga,  main="Carga vs Extensión de tracción", xlab= "Extensión de Tracción [mm]", ylab= "Carga [N]", type="l", xlim=c(0,20), ylim=c(0,1000))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
+lines(Specimen2$extension_de_traccion, Specimen2$carga, lty="dashed")
+lines(Specimen3$extension_de_traccion, Specimen3$carga, lty="dotted") # lty=line type
+lines(Specimen4$extension_de_traccion, Specimen4$carga, lty="dotdash")
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(Specimen1$extension_de_traccion, Specimen1$carga,  main="Carga vs Extensión de tracción", xlab= "Extensión de Tracción [mm]", ylab= "Carga [N]", type="l", xlim=c(0,20), ylim=c(0,1000))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
+lines(Specimen2$extension_de_traccion, Specimen2$carga, lty="dashed")
+lines(Specimen3$extension_de_traccion, Specimen3$carga, lty="dotted") # lty=line type
+lines(Specimen4$extension_de_traccion, Specimen4$carga, lty="dotdash")
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(Specimen1$extension_de_traccion, Specimen1$carga,  main="Carga vs Extensión de tracción", xlab= "Extensión de Tracción [mm]", ylab= "Carga [N]", type="l", xlim=c(0,20), ylim=c(0,1000))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
lines(Specimen2$extension_de_traccion, Specimen2$carga, lty="dashed")
lines(Specimen3$extension_de_traccion, Specimen3$carga, lty="dotted") # lty=line type
lines(Specimen4$extension_de_traccion, Specimen4$carga, lty="dotdash")
lines(Specimen5$extension_de_traccion, Specimen5$carga, lty="twodash")
#AGREGAMOS TEXTO ALEATORIO SOBRE UNAS COORDENADAS X,Y
text(x=12, y=400,label="s2")
text(x=13.3, y=410,label="s3")
text(x=19.1, y=400,label="s5")
text(x=14.5, y=400,label="s4")
text(x=15.8, y=600,label="s1")
#LIMPIAR DATOS ATIPICOS
#debido a que R es diferente de excel, lo más facil y además en este caso no se afecta
#la grŕafica al eliminar estos vaores que en el momento d emedición perdieron su '.' decimal.
#LOS DATOS DEBEN TENER PUNTOS'.' no comas ',', ya que el archivo CSV utiliza ',' para separar cada
#campo del dataframe.
Specimen1=Specimen1[Specimen1$esfuerzo_de_traccion<1000,]
Specimen1=Specimen1[Specimen1$desplazamiento_deformacion_uno<5,]
Specimen2=Specimen2[Specimen2$esfuerzo_de_traccion<1000,]
Specimen2=Specimen2[Specimen2$desplazamiento_deformacion_uno<5,]
Specimen3=Specimen3[Specimen3$esfuerzo_de_traccion<1000,]
Specimen3=Specimen3[Specimen3$desplazamiento_deformacion_uno<5,]
Specimen4=Specimen4[Specimen4$esfuerzo_de_traccion<1000,]
Specimen4=Specimen4[Specimen4$desplazamiento_deformacion_uno<5,]
Specimen5=Specimen5[Specimen5$esfuerzo_de_traccion<800,]
Specimen5=Specimen5[Specimen5$desplazamiento_deformacion_uno<5,]
## GRAFICAMOS: Esfuerzo traccion vs Desplazamiento deformacion
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(Specimen1$desplazamiento_deformacion_uno, Specimen1$esfuerzo_de_traccion,  main="Esfuerzo traccion vs Desplazamiento deformacion", xlab= " Desplazamiento Deformación 1 [mm]", ylab= "Esfuerzo de tracción [MPa]", type="l", ylim=c(0,25))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
lines(Specimen2$desplazamiento_deformacion_uno, Specimen2$esfuerzo_de_traccion, lty="dashed")
lines(Specimen3$desplazamiento_deformacion_uno, Specimen3$esfuerzo_de_traccion, lty="dotted") # lty=line type
lines(Specimen4$desplazamiento_deformacion_uno, Specimen4$esfuerzo_de_traccion, lty="dotdash")
lines(Specimen5$desplazamiento_deformacion_uno, Specimen5$esfuerzo_de_traccion, lty="twodash")
#AGREGAMOS TEXTO ALEATORIO SOBRE UNAS COORDENADAS X,Y
text(x=2, y=15,label="s2")
text(x=3.24, y=12,label="s3")
text(x=3.85, y=13,label="s4")
text(x=4.9, y=20.1,label="s5")
text(x=4.7, y=14,label="s1")
#AGREGAMOS LINEAS VERTICALES PARA SEÑALAR LA REGION ELASTICA
n1=length(Specimen1$desplazamiento_deformacion_uno)
low_band=n1*0.05
high_band=n1*0.25
abline(v=Specimen1$desplazamiento_deformacion_uno[low_band], col="blue")
abline(v=Specimen1$desplazamiento_deformacion_uno[high_band], col="blue")
abline(v=Specimen2$desplazamiento_deformacion_uno[low_band], col="red")
abline(v=Specimen2$desplazamiento_deformacion_uno[high_band], col="red")
abline(v=Specimen2$desplazamiento_deformacion_uno[low_band], col="red")
abline(v=Specimen2$desplazamiento_deformacion_uno[high_band], col="red")
abline(v=Specimen2$desplazamiento_deformacion_uno[low_band], col="yellow")
abline(v=Specimen2$desplazamiento_deformacion_uno[high_band], col="yellow")
abline(v=Specimen2$desplazamiento_deformacion_uno[low_band], col="green")
abline(v=Specimen2$desplazamiento_deformacion_uno[high_band], col="green")
deformacion_specimen1=Specimen1$desplazamiento_deformacion_uno
n1=length(Specimen1$desplazamiento_deformacion_uno)
low_band=n1*0.05
high_band=n1*0.25
deformacion_specimen1=deformacion_specimen1[low_band:high_band]
esfuerzo_specimen1=Specimen1$esfuerzo_de_traccion
esfuerzo_specimen1=esfuerzo_specimen1[low_band:high_band]
deformacion_specimen2=Specimen2$desplazamiento_deformacion_uno
deformacion_specimen2=deformacion_specimen2[low_band:high_band]
esfuerzo_specimen2=Specimen2$esfuerzo_de_traccion
esfuerzo_specimen2=esfuerzo_specimen2[low_band:high_band]
deformacion_specimen3=Specimen3$desplazamiento_deformacion_uno
deformacion_specimen3=deformacion_specimen3[low_band:high_band]
esfuerzo_specimen3=Specimen3$esfuerzo_de_traccion
esfuerzo_specimen3=esfuerzo_specimen3[low_band:high_band]
deformacion_specimen4=Specimen4$desplazamiento_deformacion_uno
deformacion_specimen4=deformacion_specimen4[low_band:high_band]
esfuerzo_specimen4=Specimen4$esfuerzo_de_traccion
esfuerzo_specimen4=esfuerzo_specimen4[low_band:high_band]
deformacion_specimen5=Specimen5$desplazamiento_deformacion_uno
deformacion_specimen5=deformacion_specimen5[low_band:high_band]
esfuerzo_specimen5=Specimen5$esfuerzo_de_traccion
esfuerzo_specimen5=esfuerzo_specimen5[low_band:high_band]
par(mfrow = c(2,3))
plot( deformacion_specimen1,  esfuerzo_specimen1)
plot( deformacion_specimen2,  esfuerzo_specimen2)
plot( deformacion_specimen3,  esfuerzo_specimen3)
plot( deformacion_specimen4,  esfuerzo_specimen4)
plot( deformacion_specimen5,  esfuerzo_specimen5)
regresion1= lm(esfuerzo_specimen1 ~ deformacion_specimen1)
regresion2= lm(esfuerzo_specimen2 ~ deformacion_specimen2)
regresion3= lm(esfuerzo_specimen3 ~ deformacion_specimen3)
regresion4= lm(esfuerzo_specimen4 ~ deformacion_specimen4)
regresion5= lm(esfuerzo_specimen5 ~ deformacion_specimen5)
young1=regresion1$coefficients[2]
young2=regresion2$coefficients[2]
young3=regresion3$coefficients[2]
young4=regresion4$coefficients[2]
young5=regresion5$coefficients[2]
intervalo1=paste('[',as.character(as.numeric(format(confint(regresion1)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion1)[2,][2],nsmall=4))), ']', sep="")
intervalo2=paste('[',as.character(as.numeric(format(confint(regresion2)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion2)[2,][2],nsmall=4))), ']', sep="")
intervalo3=paste('[',as.character(as.numeric(format(confint(regresion3)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion3)[2,][2],nsmall=4))), ']', sep="")
intervalo4=paste('[',as.character(as.numeric(format(confint(regresion4)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion4)[2,][2],nsmall=4))), ']', sep="")
intervalo5=paste('[',as.character(as.numeric(format(confint(regresion5)[2,][1], nsmall=4))),' , ', as.character(as.numeric(format(confint(regresion5)[2,][2],nsmall=4))), ']', sep="")
beginning_mods_results = data.frame(
"Modulo_de_Young_[MPa.mm]" =
c("Specimen1" = young1,
"Specimen2" = young2,
"Specimen3" = young3,
"Specimen4" = young4,
"Specimen5" = young5
),
"Intervalo_95_confinza" =
c("Specimen1" = intervalo1,
"Specimen2" = intervalo2,
"Specimen3" = intervalo3,
"Specimen4" = intervalo4,
"Specimen5" = intervalo5
)
)
t(beginning_mods_results, align = c("c", "r"))
t(beginning_mods_results)
#Para utilizar kable
library(knitr)
kable(beginning_mods_results, align = c("c", "r"))
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('dats/g1/g1s1.csv')
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('datos/g1/g1s1.csv')
Specimen2 <- read.csv('datos/g1/g1s2.csv')
Specimen3 <- read.csv('datos/g1/g1s3.csv')
Specimen4 = read.csv('datos/g1/g1s4.csv')
Specimen5 = read.csv('datos/g1/g1s5.csv')
head(Specimen1)
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('datos/g1/g1s1.csv')
Specimen2 <- read.csv('datos/g1/g1s2.csv')
Specimen3 <- read.csv('datos/g1/g1s3.csv')
Specimen4 = read.csv('datos/g1/g1s4.csv')
Specimen5 = read.csv('datos/g1/g1s5.csv')
head(Specimen1)
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('datos/g1/g1s1.csv')
Specimen2 <- read.csv('datos/g1/g1s2.csv')
Specimen3 <- read.csv('datos/g1/g1s3.csv')
Specimen4 = read.csv('datos/g1/g1s4.csv')
Specimen5 = read.csv('datos/g1/g1s5.csv')
head(Specimen1)
head(Specimen)
head(Specimen2)
head(Specimen3)
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('datos/g1/g1s1.csv')
Specimen2 <- read.csv('datos/g1/g1s2.csv')
Specimen3 <- read.csv('datos/g1/g1s3.csv')
Specimen4 = read.csv('datos/g1/g1s4.csv')
Specimen5 = read.csv('datos/g1/g1s5.csv')
head(Specimen2)
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
Specimen1 = read.csv('datos/g1/g1s1.csv')
Specimen2 <- read.csv('datos/g1/g1s2.csv')
Specimen3 <- read.csv('datos/g1/g1s3.csv')
Specimen4 = read.csv('datos/g1/g1s4.csv')
Specimen5 = read.csv('datos/g1/g1s5.csv')
head(Specimen4)
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
g1s1 = read.csv('datos/g1/g1s1.csv')
g1s2 <- read.csv('datos/g1/g1s2.csv')
g2s3 <- read.csv('datos/g1/g1s3.csv')
g1s4 = read.csv('datos/g1/g1s4.csv')
g1s5 = read.csv('datos/g1/g1s5.csv')
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
#GRUPO 1
g1s1 = read.csv('datos/g1/g1s1.csv')
g1s2 <- read.csv('datos/g1/g1s2.csv')
g1s3 <- read.csv('datos/g1/g1s3.csv')
g1s4 = read.csv('datos/g1/g1s4.csv')
g1s5 = read.csv('datos/g1/g1s5.csv')
#GRUPO 2
g2s1 = read.csv('datos/g2/g2s1.csv')
g2s2 <- read.csv('datos/g2/g2s2.csv')
g2s3 <- read.csv('datos/g2/g2s3.csv')
g2s4 = read.csv('datos/g2/g2s4.csv')
g2s5 = read.csv('datos/g2/g2s5.csv')
#GRUPO 3
g3s1 = read.csv('datos/g3/g3s1.csv')
g3s2 <- read.csv('datos/g3/g3s2.csv')
g3s3 <- read.csv('datos/g3/g3s3.csv')
g3s4 = read.csv('datos/g3/g3s4.csv')
g3s5 = read.csv('datos/g3/g3s5.csv')
#GRUPO 4
g4s1 = read.csv('datos/g4/g4s1.csv')
g4s2 <- read.csv('datos/g4/g4s2.csv')
g4s3 <- read.csv('datos/g4/g4s3.csv')
g4s4 = read.csv('datos/g4/g4s4.csv')
g4s5 = read.csv('datos/g4/g4s5.csv')
