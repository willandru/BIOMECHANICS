g2s4=head(g2s4,-5)
g2s5=head(g2s5,-5)
g3s1=head(g3s1,-5)
g3s2=head(g3s2,-15)
g3s3=head(g3s3,-5)
g3s4=head(g3s4,-5)
g3s5=head(g3s5,-5)
g4s1=head(g4s1,-5)
g4s2=head(g4s2,-5)
g4s3=head(g4s3,-5)
g4s4=head(g4s4,-5)
g4s5=head(g4s5,-5)
par(mfrow = c(2,3))
plot(g3s1$Desplazamiento_Deformacion_uno, g3s1$Esfuerzo_de_traccion)
plot(g3s2$Desplazamiento_Deformacion_uno, g3s2$Esfuerzo_de_traccion)
plot(g3s3$Desplazamiento_Deformacion_uno, g3s3$Esfuerzo_de_traccion)
plot(g3s4$Desplazamiento_Deformacion_uno, g3s4$Esfuerzo_de_traccion)
plot(g3s5$Desplazamiento_Deformacion_uno, g3s5$Esfuerzo_de_traccion)
g1s1=head(g1s1,-5)
g1s2=head(g1s2,-5)
g1s3=head(g1s3,-5)
g1s4=head(g1s4,-5)
g2s1=head(g2s1,-5)
g2s2=head(g2s2,-5)
g2s3=head(g2s3,-5)
g2s4=head(g2s4,-5)
g2s5=head(g2s5,-5)
g3s1=head(g3s1,-5)
g3s2=head(g3s2,-15)
g3s3=head(g3s3,-5)
g3s4=head(g3s4,-5)
g3s5=head(g3s5,-5)
g4s1=head(g4s1,-5)
g4s2=head(g4s2,-5)
g4s3=head(g4s3,-5)
g4s4=head(g4s4,-5)
g4s5=head(g4s5,-5)
par(mfrow = c(2,3))
plot(g4s1$Desplazamiento_Deformacion_uno, g4s1$Esfuerzo_de_traccion)
plot(g4s2$Desplazamiento_Deformacion_uno, g4s2$Esfuerzo_de_traccion)
plot(g4s3$Desplazamiento_Deformacion_uno, g4s3$Esfuerzo_de_traccion)
plot(g4s4$Desplazamiento_Deformacion_uno, g4s4$Esfuerzo_de_traccion)
plot(g4s5$Desplazamiento_Deformacion_uno, g4s5$Esfuerzo_de_traccion)
g1s1=head(g1s1,-5)
g1s2=head(g1s2,-5)
g1s3=head(g1s3,-5)
g1s4=head(g1s4,-5)
g2s1=head(g2s1,-5)
g2s2=head(g2s2,-5)
g2s3=head(g2s3,-5)
g2s4=head(g2s4,-5)
g2s5=head(g2s5,-5)
g3s1=head(g3s1,-5)
g3s2=head(g3s2,-15)
g3s3=head(g3s3,-5)
g3s4=head(g3s4,-5)
g3s5=head(g3s5,-5)
g4s1=head(g4s1,-5)
g4s2=head(g4s2,-5)
g4s3=head(g4s3,-5)
g4s4=head(g4s4,-5)
g4s5=head(g4s5,-5)
par(mfrow = c(2,3))
plot(g1s1$Desplazamiento_Deformacion_uno, g1s1$Esfuerzo_de_traccion)
plot(g1s2$Desplazamiento_Deformacion_uno, g1s2$Esfuerzo_de_traccion)
plot(g1s3$Desplazamiento_Deformacion_uno, g1s3$Esfuerzo_de_traccion)
plot(g1s4$Desplazamiento_Deformacion_uno, g1s4$Esfuerzo_de_traccion)
plot(g1s5$Desplazamiento_Deformacion_uno, g1s5$Esfuerzo_de_traccion)
g2s5[,-1]
tail(g2s5)
tail(g2s5,1)
tail(g2s5$Esfuerzo_de_traccion,1)
eu_g1s1=tail(g1s1$Esfuerzo_de_traccion,1)
eu_g1s2=tail(g1s2$Esfuerzo_de_traccion,1)
eu_g1s3=tail(g1s3$Esfuerzo_de_traccion,1)
eu_g1s4=tail(g1s4$Esfuerzo_de_traccion,1)
eu_g1s5=tail(g1s5$Esfuerzo_de_traccion,1)
EU_G1=mean(eu_g1s1,eu_g1s2,eu_g1s3,eu_g1s4,eu_g1s5)
DES_G1=sd(c(eu_g1s1,eu_g1s2,eu_g1s3,eu_g1s4,eu_g1s5))
#ESFUERZO ULTIMO
g1s1=head(g1s1,-5)
g1s2=head(g1s2,-5)
g1s3=head(g1s3,-5)
g1s4=head(g1s4,-5)
g2s1=head(g2s1,-5)
g2s2=head(g2s2,-5)
g2s3=head(g2s3,-5)
g2s4=head(g2s4,-5)
g2s5=head(g2s5,-5)
g3s1=head(g3s1,-5)
g3s2=head(g3s2,-15)
g3s3=head(g3s3,-5)
g3s4=head(g3s4,-5)
g3s5=head(g3s5,-5)
g4s1=head(g4s1,-5)
g4s2=head(g4s2,-5)
g4s3=head(g4s3,-5)
g4s4=head(g4s4,-5)
g4s5=head(g4s5,-5)
eu_g1s1=tail(g1s1$Esfuerzo_de_traccion,1)
eu_g1s2=tail(g1s2$Esfuerzo_de_traccion,1)
eu_g1s3=tail(g1s3$Esfuerzo_de_traccion,1)
eu_g1s4=tail(g1s4$Esfuerzo_de_traccion,1)
eu_g1s5=tail(g1s5$Esfuerzo_de_traccion,1)
EU_G1=mean(eu_g1s1,eu_g1s2,eu_g1s3,eu_g1s4,eu_g1s5)
DES_G1=sd(c(eu_g1s1,eu_g1s2,eu_g1s3,eu_g1s4,eu_g1s5))
eu_g2s1=tail(g2s1$Esfuerzo_de_traccion,1)
eu_g2s2=tail(g2s2$Esfuerzo_de_traccion,1)
eu_g2s3=tail(g2s3$Esfuerzo_de_traccion,1)
eu_g2s4=tail(g2s4$Esfuerzo_de_traccion,1)
eu_g2s5=tail(g2s5$Esfuerzo_de_traccion,1)
EU_G2=mean(eu_g2s1,eu_g2s2,eu_g2s3,eu_g2s4,eu_g2s5)
DES_G2=sd(c(eu_g2s1,eu_g2s2,eu_g2s3,eu_g2s4,eu_g2s5))
eu_g3s1=tail(g3s1$Esfuerzo_de_traccion,1)
eu_g3s2=tail(g3s2$Esfuerzo_de_traccion,1)
eu_g3s3=tail(g3s3$Esfuerzo_de_traccion,1)
eu_g3s4=tail(g3s4$Esfuerzo_de_traccion,1)
eu_g3s5=tail(g3s5$Esfuerzo_de_traccion,1)
EU_G3=mean(eu_g3s1,eu_g3s2,eu_g3s3,eu_g3s4,eu_g3s5)
DES_G3=sd(c(eu_g3s1,eu_g3s2,eu_g3s3,eu_g3s4,eu_g3s5))
eu_g4s1=tail(g4s1$Esfuerzo_de_traccion,1)
eu_g4s2=tail(g4s2$Esfuerzo_de_traccion,1)
eu_g4s3=tail(g4s3$Esfuerzo_de_traccion,1)
eu_g4s4=tail(g4s4$Esfuerzo_de_traccion,1)
eu_g4s5=tail(g4s5$Esfuerzo_de_traccion,1)
EU_G4=mean(eu_g4s1,eu_g4s2,eu_g4s3,eu_g4s4,eu_g4s5)
DES_G4=sd(c(eu_g4s1,eu_g4s2,eu_g4s3,eu_g4s4,eu_g4s5))
beginning_mods_results = data.frame(
"Esfuerzo Ultimo[MPa]" =
c("Grupo1_60" = EU_G1,
"Grupo2_40" = EU_G2,
"Grupo3_100" = EU_G3,
"Grupo4_80" = EU_G4
),
"Desviación Estandar" =
c("Grupo1_60" = DES_G1,
"Grupo2_40" = DES_G2,
"Grupo3_100" = DES_G3,
"Grupo4_80" = DES_G4
)
)
#Para utilizar kable
library(knitr)
library(kableExtra)
#kable(beginning_mods_results)
kable(beginning_mods_results) %>%
kable_styling(c("striped", "bordered"))
tail(g1s1,1)
tail(g1s1$Esfuerzo_de_traccion,1)
tail(g2s1$Esfuerzo_de_traccion,1)
tail(g3s1$Esfuerzo_de_traccion,1)
tail(g4s1$Esfuerzo_de_traccion,1)
#ESFUERZO ULTIMO
g1s1=head(g1s1,-5)
g1s2=head(g1s2,-5)
g1s3=head(g1s3,-5)
g1s4=head(g1s4,-5)
g2s1=head(g2s1,-5)
g2s2=head(g2s2,-4)
g2s3=head(g2s3,-5)
g2s4=head(g2s4,-4)
g2s5=head(g2s5,-5)
g3s1=head(g3s1,-5)
g3s2=head(g3s2,-15)
g3s3=head(g3s3,-5)
g3s4=head(g3s4,-5)
g3s5=head(g3s5,-5)
g4s1=head(g4s1,-5)
g4s2=head(g4s2,-5)
g4s3=head(g4s3,-5)
g4s4=head(g4s4,-5)
g4s5=head(g4s5,-5)
eu_g1s1=tail(g1s1$Esfuerzo_de_traccion,1)
eu_g1s2=tail(g1s2$Esfuerzo_de_traccion,1)
eu_g1s3=tail(g1s3$Esfuerzo_de_traccion,1)
eu_g1s4=tail(g1s4$Esfuerzo_de_traccion,1)
eu_g1s5=tail(g1s5$Esfuerzo_de_traccion,1)
EU_G1=mean(eu_g1s1,eu_g1s2,eu_g1s3,eu_g1s4,eu_g1s5)
DES_G1=sd(c(eu_g1s1,eu_g1s2,eu_g1s3,eu_g1s4,eu_g1s5))
eu_g2s1=tail(g2s1$Esfuerzo_de_traccion,1)
eu_g2s2=tail(g2s2$Esfuerzo_de_traccion,1)
eu_g2s3=tail(g2s3$Esfuerzo_de_traccion,1)
eu_g2s4=tail(g2s4$Esfuerzo_de_traccion,1)
eu_g2s5=tail(g2s5$Esfuerzo_de_traccion,1)
EU_G2=mean(eu_g2s1,eu_g2s2,eu_g2s3,eu_g2s4,eu_g2s5)
DES_G2=sd(c(eu_g2s1,eu_g2s2,eu_g2s3,eu_g2s4,eu_g2s5))
eu_g3s1=tail(g3s1$Esfuerzo_de_traccion,1)
eu_g3s2=tail(g3s2$Esfuerzo_de_traccion,1)
eu_g3s3=tail(g3s3$Esfuerzo_de_traccion,1)
eu_g3s4=tail(g3s4$Esfuerzo_de_traccion,1)
eu_g3s5=tail(g3s5$Esfuerzo_de_traccion,1)
EU_G3=mean(eu_g3s1,eu_g3s2,eu_g3s3,eu_g3s4,eu_g3s5)
DES_G3=sd(c(eu_g3s1,eu_g3s2,eu_g3s3,eu_g3s4,eu_g3s5))
eu_g4s1=tail(g4s1$Esfuerzo_de_traccion,1)
eu_g4s2=tail(g4s2$Esfuerzo_de_traccion,1)
eu_g4s3=tail(g4s3$Esfuerzo_de_traccion,1)
eu_g4s4=tail(g4s4$Esfuerzo_de_traccion,1)
eu_g4s5=tail(g4s5$Esfuerzo_de_traccion,1)
EU_G4=mean(eu_g4s1,eu_g4s2,eu_g4s3,eu_g4s4,eu_g4s5)
DES_G4=sd(c(eu_g4s1,eu_g4s2,eu_g4s3,eu_g4s4,eu_g4s5))
beginning_mods_results = data.frame(
"Esfuerzo Ultimo[MPa]" =
c("Grupo1_60" = EU_G1,
"Grupo2_40" = EU_G2,
"Grupo3_100" = EU_G3,
"Grupo4_80" = EU_G4
),
"Desviación Estandar" =
c("Grupo1_60" = DES_G1,
"Grupo2_40" = DES_G2,
"Grupo3_100" = DES_G3,
"Grupo4_80" = DES_G4
)
)
#Para utilizar kable
library(knitr)
library(kableExtra)
#kable(beginning_mods_results)
kable(beginning_mods_results) %>%
kable_styling(c("striped", "bordered"))
es_ult_g1s1=max(g1s1$Esfuerzo_de_traccion)
es_ult_g1s2=max(g1s2$Esfuerzo_de_traccion)
es_ult_g1s3=max(g1s3$Esfuerzo_de_traccion)
es_ult_g1s4=max(g1s4$Esfuerzo_de_traccion)
es_ult_g1s5=max(g1s5$Esfuerzo_de_traccion)
es_ult_g2s1=max(g2s1$Esfuerzo_de_traccion)
es_ult_g2s2=max(g2s2$Esfuerzo_de_traccion)
es_ult_g2s3=max(g2s3$Esfuerzo_de_traccion)
es_ult_g2s4=max(g2s4$Esfuerzo_de_traccion)
es_ult_g2s5=max(g2s5$Esfuerzo_de_traccion)
es_ult_g3s1=max(g3s1$Esfuerzo_de_traccion)
es_ult_g3s2=max(g3s2$Esfuerzo_de_traccion)
es_ult_g3s3=max(g3s3$Esfuerzo_de_traccion)
es_ult_g3s4=max(g3s4$Esfuerzo_de_traccion)
es_ult_g3s5=max(g3s5$Esfuerzo_de_traccion)
es_ult_g4s1=max(g4s1$Esfuerzo_de_traccion)
es_ult_g4s2=max(g4s2$Esfuerzo_de_traccion)
es_ult_g4s3=max(g4s3$Esfuerzo_de_traccion)
es_ult_g4s4=max(g4s4$Esfuerzo_de_traccion)
es_ult_g4s5=max(g4s5$Esfuerzo_de_traccion)
ESFUERZO_CEDENCIA_G1= mean(es_ult_g1s1,es_ult_g1s2,es_ult_g1s3,es_ult_g1s4,es_ult_g1s5)
ESFUERZO_CEDENCIA_G2= mean(es_ult_g2s1,es_ult_g2s2,es_ult_g2s3,es_ult_g2s4,es_ult_g2s5)
ESFUERZO_CEDENCIA_G3= mean(es_ult_g3s1,es_ult_g3s2,es_ult_g3s3,es_ult_g3s4,es_ult_g3s5)
ESFUERZO_CEDENCIA_G4= mean(es_ult_g4s1,es_ult_g4s2,es_ult_g4s3,es_ult_g4s4,es_ult_g4s5)
DESVIACION_ESF_CED_G1=sd(c(es_ult_g1s1,es_ult_g1s2,es_ult_g1s3,es_ult_g1s4,es_ult_g1s5))
DESVIACION_ESF_CED_G2=sd(c(es_ult_g2s1,es_ult_g2s2,es_ult_g2s3,es_ult_g2s4,es_ult_g2s5))
DESVIACION_ESF_CED_G3=sd(c(es_ult_g3s1,es_ult_g3s2,es_ult_g3s3,es_ult_g3s4,es_ult_g3s5))
DESVIACION_ESF_CED_G4=sd(c(es_ult_g4s1,es_ult_g4s2,es_ult_g4s3,es_ult_g4s4,es_ult_g4s5))
beginning_mods_results = data.frame(
"Esfuerzo Cedencia [MPa]" =
c("Grupo1_60" = ESFUERZO_ULTIMO_G1,
"Grupo2_40" = ESFUERZO_ULTIMO_G2,
"Grupo3_100" = ESFUERZO_ULTIMO_G3,
"Grupo4_80" = ESFUERZO_ULTIMO_G4
),
"Desviación Estandar" =
c("Grupo1_60" = DESVIACION_ESF_ULT_G1,
"Grupo2_40" = DESVIACION_ESF_ULT_G2,
"Grupo3_100" = DESVIACION_ESF_ULT_G3,
"Grupo4_80" = DESVIACION_ESF_ULT_G4
)
)
#Para utilizar kable
library(knitr)
library(kableExtra)
#kable(beginning_mods_results)
kable(beginning_mods_results) %>%
kable_styling(c("striped", "bordered"))
#GRUPO 1
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(g1s1$Desplazamiento_Deformacion_uno, g1s1$Esfuerzo_de_traccion,  main="G-1 PLLA 60% : Esfuerzo vs Deformacion", xlab= " Desplazamiento Deformación 1 [mm]", ylab= "Esfuerzo de tracción [MPa]", type="l", ylim=c(0,25))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
lines(g1s2$Desplazamiento_Deformacion_uno, g1s2$Esfuerzo_de_traccion, lty="dashed")
lines(g1s3$Desplazamiento_Deformacion_uno, g1s3$Esfuerzo_de_traccion, lty="dotted") # lty=line type
lines(g1s4$Desplazamiento_Deformacion_uno, g1s4$Esfuerzo_de_traccion, lty="dotdash")
lines(g1s5$Desplazamiento_Deformacion_uno, g1s5$Esfuerzo_de_traccion, lty="twodash")
#AGREGAMOS TEXTO ALEATORIO SOBRE UNAS COORDENADAS X,Y
text(x=2, y=15,label="s2")
text(x=3.24, y=12,label="s3")
text(x=3.85, y=13,label="s4")
text(x=4.9, y=20.1,label="s5")
text(x=4.7, y=14,label="s1")
#AGREGAMOS LINEAS VERTICALES PARA SEÑALAR LA REGION ELASTICA
n1=length(g1s1$Desplazamiento_Deformacion_uno)
low_band=n1*0.05
high_band=n1*0.2
abline(v=g1s1$Desplazamiento_Deformacion_uno[low_band], col="blue")
abline(v=g1s1$Desplazamiento_Deformacion_uno[high_band], col="blue")
abline(v=g1s2$Desplazamiento_Deformacion_uno[low_band], col="red")
abline(v=g1s2$Desplazamiento_Deformacion_uno[high_band], col="red")
abline(v=g1s3$Desplazamiento_Deformacion_uno[low_band], col="lightsalmon")
abline(v=g1s3$Desplazamiento_Deformacion_uno[high_band], col="lightsalmon")
abline(v=g1s4$Desplazamiento_Deformacion_uno[low_band], col="yellow")
abline(v=g1s4$Desplazamiento_Deformacion_uno[high_band], col="yellow")
abline(v=g1s5$Desplazamiento_Deformacion_uno[low_band], col="green")
abline(v=g1s5$Desplazamiento_Deformacion_uno[high_band], col="green")
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
#GRUPO 1
g1s1 = read.csv('datos/g1/g1s1.csv')
g1s2 <- read.csv('datos/g1/g1s2.csv')
g1s3 <- read.csv('datos/g1/g1s3.csv')
g1s4 = read.csv('datos/g1/g1s4.csv')
g1s5 = read.csv('datos/g1/g1s5.csv')
#GRUPO 2
g2s1 = read.csv('datos/g2/g2s1.csv')
g2s2 <- read.csv('datos/g2/g2s2.csv')
g2s3 <- read.csv('datos/g2/g2s3.csv')
g2s4 = read.csv('datos/g2/g2s4.csv')
g2s5 = read.csv('datos/g2/g2s5.csv')
#GRUPO 3
g3s1 = read.csv('datos/g3/g3s1.csv')
g3s2 <- read.csv('datos/g3/g3s2.csv')
g3s3 <- read.csv('datos/g3/g3s3.csv')
g3s4 = read.csv('datos/g3/g3s4.csv')
g3s5 = read.csv('datos/g3/g3s5.csv')
#GRUPO 4
g4s1 = read.csv('datos/g4/g4s1.csv')
g4s2 <- read.csv('datos/g4/g4s2.csv')
g4s3 <- read.csv('datos/g4/g4s3.csv')
g4s4 = read.csv('datos/g4/g4s4.csv')
g4s5 = read.csv('datos/g4/g4s5.csv')
#debido a que R es diferente de excel, lo más facil y además en este caso no se afecta la grŕafica al eliminar estos vaores que en el momento d emedición perdieron su '.' decimal. LOS DATOS DEBEN TENER PUNTOS'.' no comas ',', ya que el archivo CSV utiliza ',' para separar cada campo del dataframe
g1s1=g1s1[g1s1$Esfuerzo_de_traccion<1000,]
g1s1=g1s1[g1s1$Desplazamiento_Deformacion_uno<5,]
g1s2=g1s2[g1s2$Esfuerzo_de_traccion<1000,]
g1s2=g1s2[g1s2$Desplazamiento_Deformacion_uno<5,]
g1s3=g1s3[g1s3$Esfuerzo_de_traccion<1000,]
g1s3=g1s3[g1s3$Desplazamiento_Deformacion_uno<5,]
g1s4=g1s4[g1s4$Esfuerzo_de_traccion<1000,]
g1s4=g1s4[g1s4$Desplazamiento_Deformacion_uno<5,]
g1s5=g1s5[g1s5$Esfuerzo_de_traccion<800,]
g1s5=g1s5[g1s5$Desplazamiento_Deformacion_uno<5,]
g2s1=g2s1[g2s1$Esfuerzo_de_traccion<1000,]
g2s1=g2s1[g2s1$Desplazamiento_Deformacion_uno<5,]
g2s2=g2s2[g2s2$Esfuerzo_de_traccion<1000,]
g2s2=g2s2[g2s2$Desplazamiento_Deformacion_uno<5,]
g2s2=head(g2s2, -18)
g2s3=g2s3[g2s3$Esfuerzo_de_traccion<1000,]
g2s3=g2s3[g2s3$Desplazamiento_Deformacion_uno<5,]
g2s4=g2s4[g2s4$Esfuerzo_de_traccion<1000,]
g2s4=g2s4[g2s4$Desplazamiento_Deformacion_uno<5,]
g2s5=g2s5[g2s5$Esfuerzo_de_traccion<800,]
g2s5=g2s5[g2s5$Desplazamiento_Deformacion_uno<5,]
g3s1=g3s1[g3s1$Esfuerzo_de_traccion<1000,]
g3s1=g3s1[g3s1$Desplazamiento_Deformacion_uno<5,]
g3s2=g3s2[g3s2$Esfuerzo_de_traccion<1000,]
g3s2=g3s2[g3s2$Desplazamiento_Deformacion_uno<5,]
g3s3=g3s3[g3s3$Esfuerzo_de_traccion<1000,]
g3s3=g3s3[g3s3$Desplazamiento_Deformacion_uno<5,]
g3s4=g3s4[g3s4$Esfuerzo_de_traccion<1000,]
g3s4=g3s4[g3s4$Desplazamiento_Deformacion_uno<5,]
g3s5=g3s5[g3s5$Esfuerzo_de_traccion<800,]
g3s5=g3s5[g3s5$Desplazamiento_Deformacion_uno<5,]
g4s1=g4s1[g4s1$Esfuerzo_de_traccion<1000,]
g4s1=g4s1[g4s1$Desplazamiento_Deformacion_uno<5,]
g4s2=g4s2[g4s2$Esfuerzo_de_traccion<1000,]
g4s2=g4s2[g4s2$Desplazamiento_Deformacion_uno<5,]
g4s3=g4s3[g4s3$Esfuerzo_de_traccion<1000,]
g4s3=g4s3[g4s3$Desplazamiento_Deformacion_uno<5,]
g4s4=g4s4[g4s4$Esfuerzo_de_traccion<1000,]
g4s4=g4s4[g4s4$Desplazamiento_Deformacion_uno<5,]
g4s5=g4s5[g4s5$Esfuerzo_de_traccion<800,]
g4s5=g4s5[g4s5$Desplazamiento_Deformacion_uno<5,]
#GRUPO 1
#AGREGAMOS LA GRÁFICA O 'FIGURA' PRINCIPAL
plot(g1s1$Desplazamiento_Deformacion_uno, g1s1$Esfuerzo_de_traccion,  main="G-1 PLLA 60% : Esfuerzo vs Deformacion", xlab= " Desplazamiento Deformación 1 [mm]", ylab= "Esfuerzo de tracción [MPa]", type="l", ylim=c(0,25))
#AGREGAMOS SUBLINEAS A LA 'FIGURA'
lines(g1s2$Desplazamiento_Deformacion_uno, g1s2$Esfuerzo_de_traccion, lty="dashed")
lines(g1s3$Desplazamiento_Deformacion_uno, g1s3$Esfuerzo_de_traccion, lty="dotted") # lty=line type
lines(g1s4$Desplazamiento_Deformacion_uno, g1s4$Esfuerzo_de_traccion, lty="dotdash")
lines(g1s5$Desplazamiento_Deformacion_uno, g1s5$Esfuerzo_de_traccion, lty="twodash")
#AGREGAMOS TEXTO ALEATORIO SOBRE UNAS COORDENADAS X,Y
text(x=2, y=15,label="s2")
text(x=3.24, y=12,label="s3")
text(x=3.85, y=13,label="s4")
text(x=4.9, y=20.1,label="s5")
text(x=4.7, y=14,label="s1")
#AGREGAMOS LINEAS VERTICALES PARA SEÑALAR LA REGION ELASTICA
n1=length(g1s1$Desplazamiento_Deformacion_uno)
low_band=n1*0.05
high_band=n1*0.2
abline(v=g1s1$Desplazamiento_Deformacion_uno[low_band], col="blue")
abline(v=g1s1$Desplazamiento_Deformacion_uno[high_band], col="blue")
abline(v=g1s2$Desplazamiento_Deformacion_uno[low_band], col="red")
abline(v=g1s2$Desplazamiento_Deformacion_uno[high_band], col="red")
abline(v=g1s3$Desplazamiento_Deformacion_uno[low_band], col="lightsalmon")
abline(v=g1s3$Desplazamiento_Deformacion_uno[high_band], col="lightsalmon")
abline(v=g1s4$Desplazamiento_Deformacion_uno[low_band], col="yellow")
abline(v=g1s4$Desplazamiento_Deformacion_uno[high_band], col="yellow")
abline(v=g1s5$Desplazamiento_Deformacion_uno[low_band], col="green")
abline(v=g1s5$Desplazamiento_Deformacion_uno[high_band], col="green")
es_ult_g1s1=max(g1s1$Esfuerzo_de_traccion)
es_ult_g1s2=max(g1s2$Esfuerzo_de_traccion)
es_ult_g1s3=max(g1s3$Esfuerzo_de_traccion)
es_ult_g1s4=max(g1s4$Esfuerzo_de_traccion)
es_ult_g1s5=max(g1s5$Esfuerzo_de_traccion)
es_ult_g2s1=max(g2s1$Esfuerzo_de_traccion)
es_ult_g2s2=max(g2s2$Esfuerzo_de_traccion)
es_ult_g2s3=max(g2s3$Esfuerzo_de_traccion)
es_ult_g2s4=max(g2s4$Esfuerzo_de_traccion)
es_ult_g2s5=max(g2s5$Esfuerzo_de_traccion)
es_ult_g3s1=max(g3s1$Esfuerzo_de_traccion)
es_ult_g3s2=max(g3s2$Esfuerzo_de_traccion)
es_ult_g3s3=max(g3s3$Esfuerzo_de_traccion)
es_ult_g3s4=max(g3s4$Esfuerzo_de_traccion)
es_ult_g3s5=max(g3s5$Esfuerzo_de_traccion)
es_ult_g4s1=max(g4s1$Esfuerzo_de_traccion)
es_ult_g4s2=max(g4s2$Esfuerzo_de_traccion)
es_ult_g4s3=max(g4s3$Esfuerzo_de_traccion)
es_ult_g4s4=max(g4s4$Esfuerzo_de_traccion)
es_ult_g4s5=max(g4s5$Esfuerzo_de_traccion)
ESFUERZO_CEDENCIA_G1= mean(es_ult_g1s1,es_ult_g1s2,es_ult_g1s3,es_ult_g1s4,es_ult_g1s5)
ESFUERZO_CEDENCIA_G2= mean(es_ult_g2s1,es_ult_g2s2,es_ult_g2s3,es_ult_g2s4,es_ult_g2s5)
ESFUERZO_CEDENCIA_G3= mean(es_ult_g3s1,es_ult_g3s2,es_ult_g3s3,es_ult_g3s4,es_ult_g3s5)
ESFUERZO_CEDENCIA_G4= mean(es_ult_g4s1,es_ult_g4s2,es_ult_g4s3,es_ult_g4s4,es_ult_g4s5)
DESVIACION_ESF_CED_G1=sd(c(es_ult_g1s1,es_ult_g1s2,es_ult_g1s3,es_ult_g1s4,es_ult_g1s5))
DESVIACION_ESF_CED_G2=sd(c(es_ult_g2s1,es_ult_g2s2,es_ult_g2s3,es_ult_g2s4,es_ult_g2s5))
DESVIACION_ESF_CED_G3=sd(c(es_ult_g3s1,es_ult_g3s2,es_ult_g3s3,es_ult_g3s4,es_ult_g3s5))
DESVIACION_ESF_CED_G4=sd(c(es_ult_g4s1,es_ult_g4s2,es_ult_g4s3,es_ult_g4s4,es_ult_g4s5))
beginning_mods_results = data.frame(
"Esfuerzo_Cedencia_MPa" =
c("Grupo1_60" = ESFUERZO_CEDENCIA_G1,
"Grupo2_40" = ESFUERZO_CEDENCIA_G2,
"Grupo3_100" = ESFUERZO_CEDENCIA_G3,
"Grupo4_80" = ESFUERZO_CEDENCIA_G4
),
"Desviación Estandar" =
c("Grupo1_60" = DESVIACION_ESF_ULT_G1,
"Grupo2_40" = DESVIACION_ESF_ULT_G2,
"Grupo3_100" = DESVIACION_ESF_ULT_G3,
"Grupo4_80" = DESVIACION_ESF_ULT_G4
)
)
#Para utilizar kable
library(knitr)
library(kableExtra)
#kable(beginning_mods_results)
kable(beginning_mods_results) %>%
kable_styling(c("striped", "bordered"))
g1_young1=g1_r1$coefficients[2]
g1_young2=g1_r2$coefficients[2]
g1_young3=g1_r3$coefficients[2]
g1_young4=g1_r4$coefficients[2]
g1_young5=g1_r5$coefficients[2]
g2_young1=g2_r1$coefficients[2]
g2_young2=g2_r2$coefficients[2]
g2_young3=g2_r3$coefficients[2]
g2_young4=g2_r4$coefficients[2]
g2_young5=g2_r5$coefficients[2]
g3_young1=g3_r1$coefficients[2]
g3_young2=g3_r2$coefficients[2]
g3_young3=g3_r3$coefficients[2]
g3_young4=g3_r4$coefficients[2]
g3_young5=g3_r5$coefficients[2]
g4_young1=g4_r1$coefficients[2]
g4_young2=g4_r2$coefficients[2]
g4_young3=g4_r3$coefficients[2]
g4_young4=g4_r4$coefficients[2]
g4_young5=g4_r5$coefficients[2]
YOUNG_G1=mean(c(g1_young1,g1_young2,g1_young3,g1_young4, g1_young5))
STD_YOG_G1=sd(c(g1_young1,g1_young2,g1_young3,g1_young4, g1_young5))
YOUNG_G2=mean(c(g2_young1,g2_young2,g2_young3,g2_young4, g2_young5))
STD_YOG_G2=sd(c(g2_young1,g2_young2,g2_young3,g1_young4, g2_young5))
YOUNG_G3=mean(c(g3_young1,g3_young2,g3_young3,g3_young4, g3_young5))
STD_YOG_G3=sd(c(g3_young1,g3_young2,g3_young3,g3_young4, g3_young5))
YOUNG_G4=mean(c(g4_young1,g4_young2,g4_young3,g4_young4, g4_young5))
STD_YOG_G4=sd(c(g4_young1,g4_young2,g4_young3,g4_young4, g4_young5))
beginning_mods_results = data.frame(
"Módulo_de_Young" =
c("Grupo1_60" = YOUNG_G1,
"Grupo2_40" = YOUNG_G2,
"Grupo3_100" = YOUNG_G3,
"Grupo4_80" = YOUNG_G4
),
"Desviación_Estandar" =
c("Grupo1_60" = STD_YOG_G1,
"Grupo2_40" = STD_YOG_G2,
"Grupo3_100" = STD_YOG_G3,
"Grupo4_80" = STD_YOG_G4
)
)
#Para utilizar kable
library(knitr)
library(kableExtra)
#kable(beginning_mods_results)
kable(beginning_mods_results) %>%
kable_styling(c("striped", "bordered"))
#CARGAMOS LOS DATOS TIPO '.csv', arreglada la tabla en excel y los nombres de la gráfica, verificar que quede todo en orden.
#GRUPO 1
g1s1 = read.csv('datos/g1/g1s1.csv')
g1s2 <- read.csv('datos/g1/g1s2.csv')
g1s3 <- read.csv('datos/g1/g1s3.csv')
g1s4 = read.csv('datos/g1/g1s4.csv')
g1s5 = read.csv('datos/g1/g1s5.csv')
#GRUPO 2
g2s1 = read.csv('datos/g2/g2s1.csv')
g2s2 <- read.csv('datos/g2/g2s2.csv')
g2s3 <- read.csv('datos/g2/g2s3.csv')
g2s4 = read.csv('datos/g2/g2s4.csv')
g2s5 = read.csv('datos/g2/g2s5.csv')
#GRUPO 3
g3s1 = read.csv('datos/g3/g3s1.csv')
g3s2 <- read.csv('datos/g3/g3s2.csv')
g3s3 <- read.csv('datos/g3/g3s3.csv')
g3s4 = read.csv('datos/g3/g3s4.csv')
g3s5 = read.csv('datos/g3/g3s5.csv')
#GRUPO 4
g4s1 = read.csv('datos/g4/g4s1.csv')
g4s2 <- read.csv('datos/g4/g4s2.csv')
g4s3 <- read.csv('datos/g4/g4s3.csv')
g4s4 = read.csv('datos/g4/g4s4.csv')
g4s5 = read.csv('datos/g4/g4s5.csv')
